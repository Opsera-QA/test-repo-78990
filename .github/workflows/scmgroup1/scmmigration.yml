name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-job:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Compiling the code
        run: |
          echo "Compiling the code..."
          RANDOM_NUMBER=$RANDOM
          echo $RANDOM_NUMBER
          echo ${{ env.FAIL_STAGE }}
          echo ${{ env.NO_FAIL }}
          if [[ $(( RANDOM_NUMBER % 2 )) -eq 0  ]] || [[ "${{ env.FAIL_STAGE }}" == 'build' ]] || [[ "${{ env.NO_FAIL }}" == 'true' ]]; then
            exit 1
          fi
          echo "Compile complete."
    continue-on-error: true

  unit-test-job:
    runs-on: ubuntu-latest
    needs: build-job
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Running unit tests
        run: |
          echo "Running unit tests... This will take about 60 seconds."
          sleep 10
          echo ${{ env.FAIL_STAGE }}
          echo "Code coverage is 90%"

  lint-test-job:
    runs-on: ubuntu-latest
    needs: build-job
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Linting code
        run: |
          echo "Linting code... This will take about 10 seconds."
          sleep 5
          echo ${{ env.FAIL_STAGE }}
          echo "No lint issues found."

  mock-job-1:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Mock stage 1 Completed
        run: |
          echo "Mock stage 1 Completed"

  dast-job-1:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Dast stage 1 Completed
        run: |
          sleep 10
          echo "Dast stage 1 Completed"

  sast-job-1:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Sast stage 1 Completed
        run: |
          sleep 15
          if [[ $RANDOM_NUMBER%6 == 0 ]] || [[ "${{ env.FAIL_STAGE }}" == 'sast' ]] || [[ "${{ env.NO_FAIL }}" == 'true' ]]; then
            exit 1
          fi
          echo "Sast stage 1 Completed"

  deploy-e1:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploying application in dev
        run: |
          echo "Deploying application in dev"
          echo "Application successfully deployed in dev"
    environment: dev

  deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploying application to prod
        run: |
          echo "Deploying application to prod..."
          if [[ "${{ env.FAIL_STAGE }}" == 'deploy' ]]; then
            exit 1
          fi
          echo "Application successfully deployed to prod."
    environment: prod

  child-pipeline:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Child Pipeline
        run: |
          echo "Triggering child pipeline..."
          # Placeholder for actual child pipeline trigger. GitHub Actions does not support cross-repo triggers natively.
